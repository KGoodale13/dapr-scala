// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.dapr

@SerialVersionUID(0L)
final case class GetStateResponseEnvelope(
    data: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    etag: _root_.scala.Predef.String = ""
    ) extends scalapb.GeneratedMessage with scalapb.Message[GetStateResponseEnvelope] with scalapb.lenses.Updatable[GetStateResponseEnvelope] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (data.isDefined) {
        val __value = data.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = etag
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      data.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = etag
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.dapr.GetStateResponseEnvelope = {
      var __data = this.data
      var __etag = this.etag
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __data = Option(_root_.scalapb.LiteParser.readMessage(_input__, __data.getOrElse(com.google.protobuf.any.Any.defaultInstance)))
          case 18 =>
            __etag = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      io.dapr.GetStateResponseEnvelope(
          data = __data,
          etag = __etag
      )
    }
    def getData: com.google.protobuf.any.Any = data.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearData: GetStateResponseEnvelope = copy(data = _root_.scala.None)
    def withData(__v: com.google.protobuf.any.Any): GetStateResponseEnvelope = copy(data = Option(__v))
    def withEtag(__v: _root_.scala.Predef.String): GetStateResponseEnvelope = copy(etag = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => data.orNull
        case 2 => {
          val __t = etag
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => data.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(etag)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = io.dapr.GetStateResponseEnvelope
}

object GetStateResponseEnvelope extends scalapb.GeneratedMessageCompanion[io.dapr.GetStateResponseEnvelope] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.dapr.GetStateResponseEnvelope] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): io.dapr.GetStateResponseEnvelope = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    io.dapr.GetStateResponseEnvelope(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[com.google.protobuf.any.Any]],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.dapr.GetStateResponseEnvelope] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      io.dapr.GetStateResponseEnvelope(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DaprProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DaprProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.dapr.GetStateResponseEnvelope(
    data = _root_.scala.None,
    etag = ""
  )
  implicit class GetStateResponseEnvelopeLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.dapr.GetStateResponseEnvelope]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.dapr.GetStateResponseEnvelope](_l) {
    def data: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getData)((c_, f_) => c_.copy(data = Option(f_)))
    def optionalData: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.data)((c_, f_) => c_.copy(data = f_))
    def etag: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.etag)((c_, f_) => c_.copy(etag = f_))
  }
  final val DATA_FIELD_NUMBER = 1
  final val ETAG_FIELD_NUMBER = 2
  def of(
    data: _root_.scala.Option[com.google.protobuf.any.Any],
    etag: _root_.scala.Predef.String
  ): _root_.io.dapr.GetStateResponseEnvelope = _root_.io.dapr.GetStateResponseEnvelope(
    data,
    etag
  )
}
